name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  django:
    name: Django (${{ matrix.database }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        database: [sqlite, postgres]
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: building_mgmt
          POSTGRES_PASSWORD: building_mgmt
          POSTGRES_DB: building_mgmt
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U building_mgmt"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure DATABASE_URL
        if: matrix.database == 'postgres'
        run: |
          echo "DATABASE_URL=postgres://building_mgmt:building_mgmt@postgres:5432/building_mgmt" >> "$GITHUB_ENV"

      - name: Wait for Postgres
        if: matrix.database == 'postgres'
        run: |
          python - <<'PY'
import os
import time

import psycopg

url = os.environ["DATABASE_URL"]
deadline = time.time() + 60
while time.time() < deadline:
    try:
        with psycopg.connect(url, connect_timeout=5):
            break
    except psycopg.OperationalError:
        time.sleep(1)
else:
    raise SystemExit("Postgres did not become ready in 60 seconds.")
PY

      - name: Django system check
        run: python manage.py check

      - name: Migration plan
        run: python manage.py migrate --plan
